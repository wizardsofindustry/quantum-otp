---
#######################################################################
#
# REPOSITORY DEFINITION FOR PINREPOSITORY
#
# The definition provided in this file is used by SG to compile a
# base class for the PinRepository repository. A the Repository
# classes abstract the persisting of domain objects from the concrete
# infrastructure implementation. For a detailed explanation of
# configuration values, refer to the comments below.
#
# The repository specified in this file will be compiled in the
# following Python module:
#
#   safi.infra.repo.pin
#
# To create the implementation for this repository, edit its
# module at:
#
#   ./safi/infra/repo/pin/impl.py
#
#######################################################################

# Specifies the name of the repository class. This value is also used
# to generate a module name, amongst other uses. Therefor, for correct
# operation of the SG compiler, this SHOULD NOT be changed.
name: PinRepository


# Defines the repository implementation(s) that are used by the
# PinRepository base class. It may also be used to inherit
# from mixin classes. The elements are qualified names to Python
# symbols e.g `sq.persistence.Repository`.
bases:
- sq.persistence.Repository


# This list specifies the methods that the repository class publicly
# exposes. See the example below.
#
# methods:
# - name: my_method_name
#   parameters:
#   - name: foo
#   - name: bar
#     default: None
#   args: true
#   kwargs: true
#   doc:
#     heading: >
#       This is the opening line of the docstring for the
#       my_method_name repository method. It is rendered before
#       the args block.
#     returns: >
#       The return value. See the Napoleon documentation.
#
# Note that parameters are compiled in the order they were defined,
# but parameters with defaults will always come after defaultless
# parameters in the method signature.
methods:
- name: get
  parameters:
  - name: gsid
  args: false
  kwargs: false
  doc:
    heading: >
      Return the Data Access Object (DAO) holding the PIN for the
      **Subject** identified by `gsid`.
    returns:
      :class:`PIN`
- name: exists
  parameters:
  - name: gsid
  args: false
  kwargs: false
  doc:
    heading: >
      Return a boolean indicating if the **Subject** identified by
      `gsid` has a PIN.
    returns:
      bool
- name: persist_pin
  parameters:
  - name: persistable
  args: false
  kwargs: false
  doc:
    heading: >
      Persists a Personal Identification Number (PIN) object to the
      persistent data store.
    returns:
      This method has no return value.


# A list containing dependencies from the inversion-of-control
# container that should be added to the base class as class
# properties. The elements in this list are mappings and must
# have the following structure:
#
#   require: the name of the dependency
#   desc: a description of this dependency and how it is
#     used by the repository. This member is optional.
#   attname: the name of the attribute on the repository class.
#
# Make sure that all dependencies listed here are injected either
# programmatically or using the configuration files in the
# ./etc/ioc.conf.d directory.
dependencies:
- require: DatabaseSessionFactory
  attname: session


# Specifies exception classes that the repository will declare.
#
# Example:
#
# exceptions:
# - name: MyCustomException
#   base: sq.exceptions.ObjectDoesNotExist
#   doc: >
#     This exception is raised when an object that the repository is
#     trying to lookup does not exist.
#
# If the `base` attribute is not defined, then the exception inherits
# from Exception.
exceptions: []
